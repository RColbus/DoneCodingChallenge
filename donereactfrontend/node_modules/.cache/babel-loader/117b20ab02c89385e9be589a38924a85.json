{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wait = wait;\nexports.error = error;\nexports.warn = warn;\nexports.ready = ready;\nexports.info = info;\nexports.event = event;\nexports.trace = trace;\nexports.prefixes = void 0;\n\nvar _chalk = _interopRequireDefault(require(\"../../lib/chalk\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst prefixes = {\n  wait: _chalk.default.cyan(\"wait\") + \"  -\",\n  error: _chalk.default.red(\"error\") + \" -\",\n  warn: _chalk.default.yellow(\"warn\") + \"  -\",\n  ready: _chalk.default.green(\"ready\") + \" -\",\n  info: _chalk.default.cyan(\"info\") + \"  -\",\n  event: _chalk.default.magenta(\"event\") + \" -\",\n  trace: _chalk.default.magenta(\"trace\") + \" -\"\n};\nexports.prefixes = prefixes;\n\nfunction wait() {\n  for (var _len = arguments.length, message = new Array(_len), _key = 0; _key < _len; _key++) {\n    message[_key] = arguments[_key];\n  }\n\n  console.log(prefixes.wait, ...message);\n}\n\nfunction error() {\n  for (var _len2 = arguments.length, message = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    message[_key2] = arguments[_key2];\n  }\n\n  console.error(prefixes.error, ...message);\n}\n\nfunction warn() {\n  for (var _len3 = arguments.length, message = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    message[_key3] = arguments[_key3];\n  }\n\n  console.warn(prefixes.warn, ...message);\n}\n\nfunction ready() {\n  for (var _len4 = arguments.length, message = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    message[_key4] = arguments[_key4];\n  }\n\n  console.log(prefixes.ready, ...message);\n}\n\nfunction info() {\n  for (var _len5 = arguments.length, message = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    message[_key5] = arguments[_key5];\n  }\n\n  console.log(prefixes.info, ...message);\n}\n\nfunction event() {\n  for (var _len6 = arguments.length, message = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    message[_key6] = arguments[_key6];\n  }\n\n  console.log(prefixes.event, ...message);\n}\n\nfunction trace() {\n  for (var _len7 = arguments.length, message = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    message[_key7] = arguments[_key7];\n  }\n\n  console.log(prefixes.trace, ...message);\n}","map":{"version":3,"mappings":"AAAA;;;;;QAYgBA;QAIAC;QAIAC;QAIAC;QAIAC;QAIAC;QAIAC;;;AApCE,UAAiB,kCAAjB,iBAAiB,EAAjB;;;;;;;;AAEX,MAAMC,QAAQ,GAAG;EACtBP,IAAI,EAAEQ,MAAK,QAALA,CAAMC,IAAND,CAAW,MAAXA,IAAqB,KADL;EAEtBP,KAAK,EAAEO,MAAK,QAALA,CAAME,GAANF,CAAU,OAAVA,IAAqB,IAFN;EAGtBN,IAAI,EAAEM,MAAK,QAALA,CAAMG,MAANH,CAAa,MAAbA,IAAuB,KAHP;EAItBL,KAAK,EAAEK,MAAK,QAALA,CAAMI,KAANJ,CAAY,OAAZA,IAAuB,IAJR;EAKtBJ,IAAI,EAAEI,MAAK,QAALA,CAAMC,IAAND,CAAW,MAAXA,IAAqB,KALL;EAMtBH,KAAK,EAAEG,MAAK,QAALA,CAAMK,OAANL,CAAc,OAAdA,IAAyB,IANV;EAOtBF,KAAK,EAAEE,MAAK,QAALA,CAAMK,OAANL,CAAc,OAAdA,IAAyB;AAPV,CAAjB;QAAMD;;AAUN,SAASP,IAAT,GAAiC;EAAA,kCAAhBc,OAAgB;IAAhBA,OAAgB;EAAA;;EACtCC,OAAO,CAACC,GAARD,CAAYR,QAAQ,CAACP,IAArBe,EAAyB,GAAKD,OAA9BC;AACD;;AAEM,SAASd,KAAT,GAAkC;EAAA,mCAAhBa,OAAgB;IAAhBA,OAAgB;EAAA;;EACvCC,OAAO,CAACd,KAARc,CAAcR,QAAQ,CAACN,KAAvBc,EAA4B,GAAKD,OAAjCC;AACD;;AAEM,SAASb,IAAT,GAAiC;EAAA,mCAAhBY,OAAgB;IAAhBA,OAAgB;EAAA;;EACtCC,OAAO,CAACb,IAARa,CAAaR,QAAQ,CAACL,IAAtBa,EAA0B,GAAKD,OAA/BC;AACD;;AAEM,SAASZ,KAAT,GAAkC;EAAA,mCAAhBW,OAAgB;IAAhBA,OAAgB;EAAA;;EACvCC,OAAO,CAACC,GAARD,CAAYR,QAAQ,CAACJ,KAArBY,EAA0B,GAAKD,OAA/BC;AACD;;AAEM,SAASX,IAAT,GAAiC;EAAA,mCAAhBU,OAAgB;IAAhBA,OAAgB;EAAA;;EACtCC,OAAO,CAACC,GAARD,CAAYR,QAAQ,CAACH,IAArBW,EAAyB,GAAKD,OAA9BC;AACD;;AAEM,SAASV,KAAT,GAAkC;EAAA,mCAAhBS,OAAgB;IAAhBA,OAAgB;EAAA;;EACvCC,OAAO,CAACC,GAARD,CAAYR,QAAQ,CAACF,KAArBU,EAA0B,GAAKD,OAA/BC;AACD;;AAEM,SAAST,KAAT,GAAkC;EAAA,mCAAhBQ,OAAgB;IAAhBA,OAAgB;EAAA;;EACvCC,OAAO,CAACC,GAARD,CAAYR,QAAQ,CAACD,KAArBS,EAA0B,GAAKD,OAA/BC;AACD","names":["wait","error","warn","ready","info","event","trace","prefixes","chalk","cyan","red","yellow","green","magenta","message","console","log"],"sources":["../../../build/output/log.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}